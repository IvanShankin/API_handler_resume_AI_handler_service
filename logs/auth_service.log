2025-07-30 12:15:31,745 - openai - INFO - error_code=unsupported_country_region_territory error_message='Country, region, or territory not supported' error_param=None error_type=request_forbidden message='OpenAI API error received' stream_error=False
2025-07-30 12:26:59,744 - openai - INFO - error_code=rate_limit_exceeded error_message='Rate limit reached for gpt-4.1-mini in organization org-kU2Zljd9bqw8m2cxY2NAlxrr on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
2025-07-30 14:49:07,129 - openai - INFO - error_code=rate_limit_exceeded error_message='Rate limit reached for gpt-4.1-mini in organization org-kU2Zljd9bqw8m2cxY2NAlxrr on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
2025-07-31 01:33:44,386 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 01:34:07,689 - openai - INFO - error_code=unsupported_country_region_territory error_message='Country, region, or territory not supported' error_param=None error_type=request_forbidden message='OpenAI API error received' stream_error=False
2025-07-31 01:34:07,695 - srt.config - ERROR - Сервер не должен отправлять запросы к GPT с Российского IP!
2025-07-31 12:54:49,811 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 12:58:40,850 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 12:58:40,851 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 12:58:55,719 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 13:33:53,782 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 13:39:21,936 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 13:39:56,728 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 13:40:47,269 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 13:41:28,640 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 13:41:37,673 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 13:51:25,041 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 13:51:34,076 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 13:52:39,606 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 13:53:36,045 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:03:52,492 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:09:14,270 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:13:35,741 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:14:57,601 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:20:42,138 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:23:03,108 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:26:24,251 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:26:24,285 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:26:59,759 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:26:59,798 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:27:17,868 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:27:17,906 - srt.config - INFO - 


Kafka запущена!



2025-07-31 14:27:27,006 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 14:28:23,563 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:28:23,564 - srt.config - WARNING - Failed to reset consumer for topic sending: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:28:32,595 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 14:29:29,084 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:29:38,112 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 14:37:34,246 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:37:43,282 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 14:38:39,820 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:38:39,821 - srt.config - WARNING - Failed to reset consumer for topic sending: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:38:48,854 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 14:40:09,029 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:40:18,063 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 14:41:23,690 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 14:42:29,146 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 14:44:18,217 - srt.config - INFO - 



Kafka Созадна!




2025-07-31 14:44:18,266 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:44:27,301 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 14:45:23,852 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:51:13,779 - srt.config - INFO - 



Kafka Созадна!




2025-07-31 14:51:13,830 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 14:51:22,861 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 14:53:35,859 - srt.config - INFO - 



Kafka Созадна!




2025-07-31 14:53:44,950 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 14:54:41,497 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 15:13:49,264 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 15:15:59,917 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 15:17:05,476 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 15:24:13,917 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 15:25:10,436 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 15:25:19,466 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 15:29:02,131 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 15:29:58,669 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 15:30:07,701 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 15:41:04,787 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 15:49:31,426 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 15:50:27,966 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 15:59:31,615 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:01:08,216 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:01:56,661 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:01:57,678 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:04:09,760 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:08:05,476 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:08:10,558 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:08:11,564 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:08:21,751 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:08:21,757 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:08:24,059 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u0438\u043c\u0435\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 Django, Docker \u0438 Redis. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e Middle Python Backend Developer.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:08:25,073 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u0438\u043c\u0435\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 Django, Docker \u0438 Redis. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e Middle Python Backend Developer.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:08:37,822 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:08:37,831 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 16:08:41,655 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u0438 \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u043d\u0430\u0439\u043c\u0443.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:08:42,667 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u0438 \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u043d\u0430\u0439\u043c\u0443.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:10:04,395 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:10:09,724 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c Python backend \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:10:10,737 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c Python backend \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:10:15,124 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0441 PostgreSQL/MySQL \u0438 GraphQL. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:10:16,137 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0441 PostgreSQL/MySQL \u0438 GraphQL. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:10:19,648 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:10:20,656 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:17,083 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:12:23,554 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:24,564 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:27,791 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:28,794 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:33,387 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:12:37,576 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:38,586 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:52,988 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:12:58,666 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c Python backend \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:12:59,685 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c Python backend \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:13:01,081 - openai - INFO - error_code=rate_limit_exceeded error_message='Rate limit reached for gpt-4.1-mini in organization org-kU2Zljd9bqw8m2cxY2NAlxrr on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
2025-07-31 16:13:01,083 - srt.config - WARNING - Получили rate limit как ошибку!
2025-07-31 16:13:44,967 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:14:24,310 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 16:16:12,760 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:16:20,401 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:16:21,413 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:16:25,501 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "\u041e\u043f\u044b\u0442 \u0441 Redis"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u0438\u043c\u0435\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 Django, Docker \u0438 Redis. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e Middle Python Backend Developer.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:16:26,520 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "\u041e\u043f\u044b\u0442 \u0441 Redis"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u0438\u043c\u0435\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 Django, Docker \u0438 Redis. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e Middle Python Backend Developer.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:16:29,050 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:16:31,183 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:16:32,192 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:16:45,101 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:16:45,109 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 16:19:46,710 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:19:52,988 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c backend-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:19:54,003 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c backend-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:19:57,903 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "\u041e\u043f\u044b\u0442 \u0441 Redis"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:19:58,920 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "\u041e\u043f\u044b\u0442 \u0441 Redis"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:20:02,652 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:20:02,991 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:20:03,001 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:20:03,003 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:24:35,018 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:25:31,556 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:25:40,587 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:37:01,727 - srt.config - WARNING - Failed to reset consumer for topic sending: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:38:27,038 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:40:24,486 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:40:32,514 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:48:23,395 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:49:19,940 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:50:37,551 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:50:46,587 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:51:13,010 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:51:13,027 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:52:09,522 - srt.config - WARNING - Failed to reset consumer for topic sending: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:52:09,531 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:52:32,018 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:52:32,034 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:52:37,955 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:52:38,967 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:52:39,122 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:53:09,165 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 16:53:18,200 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:53:25,480 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 Django/FastAPI \u0438 Docker. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:53:26,494 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 Django/FastAPI \u0438 Docker. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 16:57:38,219 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 16:58:28,823 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 16:59:19,296 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 17:09:05,746 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 17:09:14,781 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 17:10:51,170 - srt.config - WARNING - Failed to reset consumer for topic AI_handler: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 17:10:53,276 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 17:10:56,605 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 17:10:57,623 - srt.config - INFO - Kafka new message: err: None
msg: {"score": 0, "matches": [], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}
2025-07-31 17:10:57,638 - srt.config - WARNING - Failed to reset consumer for topic uploading_data: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 17:10:59,738 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 17:11:06,211 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "\u041e\u043f\u044b\u0442 \u0441 Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 17:11:07,228 - srt.config - INFO - Kafka new message: err: None
msg: {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "\u041e\u043f\u044b\u0442 \u0441 Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}
2025-07-31 17:11:07,237 - srt.config - WARNING - Failed to reset consumer for topic sending: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 17:11:09,345 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 17:11:12,449 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 17:11:13,457 - srt.config - INFO - Kafka new message: err: None
msg: {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c, \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043e\u043f\u044b\u0442\u043e\u043c \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}
2025-07-31 17:41:23,130 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0421\u043c\u0438\u0440\u043d\u043e\u0432 \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (123) 456-78-90, smirnov.d@mail.ru\n\u0426\u0435\u043b\u044c: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a Python (\u0441\u0442\u0430\u0436\u0435\u0440)\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\n\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a (Frontend), \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u0442\u0430\u0440\u0442\"\n01.2022 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u043d\u0430 React.js\n\u0412\u0435\u0440\u0441\u0442\u043a\u0430 \u043f\u043e \u043c\u0430\u043a\u0435\u0442\u0430\u043c Figma\n\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u043d\u0430 Python \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nJavaScript (ES6+), React\nHTML5, CSS3, Bootstrap\n\u0411\u0430\u0437\u043e\u0432\u044b\u0439 Python (\u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432)\nMySQL (\u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b)\nGit (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b)\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041e\u043d\u043b\u0430\u0439\u043d-\u043a\u0443\u0440\u0441\u044b \"\u0412\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441 \u043d\u0443\u043b\u044f\", 2021 (6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: A2 (\u0431\u0430\u0437\u043e\u0432\u044b\u0439)\n\u0423\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u0435 \u043f\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e\n"}
2025-07-31 17:41:24,872 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 17:41:25,882 - srt.config - INFO - Kafka new message: err: None
msg: {"score": 14, "matches": ["Python", "MySQL"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438 \u043f\u043e \u043e\u043f\u044b\u0442\u0443 \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044f\u043c. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}
2025-07-31 17:41:30,307 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u041f\u0435\u0442\u0440\u043e\u0432 \u0418\u0432\u0430\u043d \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (555) 123-45-67, petrov.dev@yandex.ru\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nPython Developer, \u041e\u041e\u041e \"\u0422\u0435\u0445\u043d\u043e\u0421\u043e\u0444\u0442\"\n05.2020 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 backend \u043d\u0430 Django (DRF)\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (sqlite3)\n\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u044b\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432\n\n\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b:\n\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432 (Django + Celery)\nAPI \u0434\u043b\u044f \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (DRF + JWT)\n\n\u041d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, DRF)\nsqlite3, Redis\nDocker, Docker-compose\nGit, Linux\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\n\u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442, \u043c\u0430\u0433\u0438\u0441\u0442\u0440 \"\u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\", 2018-2020\n"}
2025-07-31 17:41:32,294 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 17:41:33,312 - srt.config - INFO - Kafka new message: err: None
msg: {"score": 71, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0443 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439, \u043e\u0434\u043d\u0430\u043a\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u044b\u0442 \u0441 PostgreSQL/MySQL \u0438 GraphQL. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043d\u0430\u0432\u044b\u043a\u0430\u043c.", "verdict": "\u041d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}
2025-07-31 17:41:33,330 - srt.config - WARNING - Failed to reset consumer for topic sending: KafkaError{code=_STATE,val=-172,str="Failed to seek to offset 0: Local: Erroneous state"}
2025-07-31 17:41:36,404 - srt.config - INFO - Kafka new message: err: None
msg: {"user_id": 1, "resume_id": 2, "requirements_id": 3, "requirements": "\n\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c: Middle Python Backend Developer\n\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430: \u043e\u0442 150 000 \u0440\u0443\u0431.\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:\n\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442.\n\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI.\n\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b).\n\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose).\n\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL.\n\n\u0416\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nRedis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery).\nKubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435).\n\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests).\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438).\n\n\u0427\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0438\u043d\u0443\u0441\u043e\u043c:\n\u041d\u0435\u0442 \u043e\u043f\u044b\u0442\u0430 \u0441 Docker.\n\u0422\u043e\u043b\u044c\u043a\u043e Flask (\u0431\u0435\u0437 Django/FastAPI).\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n", "resume": "\n\u0424\u0418\u041e: \u0412\u043e\u043b\u043a\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447\n\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: +7 (916) 999-88-77, a.volkov@career.habr\n\n\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b:\nSenior Python Developer, \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444\n06.2018 - \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f\n\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043d\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 API \u043d\u0430 Django \u0438 FastAPI\n\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a PostgreSQL\n\u0412\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 Kubernetes \u0432 production\n\u041d\u0430\u0441\u0442\u0430\u0432\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e junior-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432\n\n\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0432\u044b\u043a\u0438:\nPython (Django, FastAPI, asyncio)\nPostgreSQL, Redis, Kafka\nDocker, Kubernetes, Helm\nGit, GitLab CI/CD\nPrometheus, Grafana\n\n\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435:\nPhD in Computer Science, MIT, 2014-2018\nMSc in Software Engineering, \u041c\u0424\u0422\u0418, 2012-2014\n\n\u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438:\n3 \u0441\u0442\u0430\u0442\u044c\u0438 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0445\n\n\u042f\u0437\u044b\u043a\u0438:\n\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439: C1 (Advanced)\n"}
2025-07-31 17:41:39,525 - srt.config - INFO - Kafka new message: err: None
msg: {"success": true, "response": {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043e\u043f\u044b\u0442 \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}, "message_error": null, "wait_seconds": null}
2025-07-31 17:41:40,538 - srt.config - INFO - Kafka new message: err: None
msg: {"score": 100, "matches": ["\u041e\u043f\u044b\u0442 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u0430 Python 3+ \u043e\u0442 2 \u043b\u0435\u0442", "\u0413\u043b\u0443\u0431\u043e\u043a\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f Django \u0438\u043b\u0438 FastAPI", "\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 PostgreSQL/MySQL (\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b)", "\u041e\u043f\u044b\u0442 \u0441 Docker (\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435, compose)", "\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 REST API, GraphQL", "Redis (\u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, Celery)", "Kubernetes (\u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435)", "\u0417\u043d\u0430\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (pytest, unit tests)", "\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u2014 \u0443\u0440\u043e\u0432\u0435\u043d\u044c B1+ (\u0447\u0442\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438)"], "recommendation": "\u041a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c \u0432\u0430\u043a\u0430\u043d\u0441\u0438\u0438, \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043e\u043f\u044b\u0442 \u0438 \u0432\u044b\u0441\u043e\u043a\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e.", "verdict": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442", "user_id": 1, "requirements_id": 3, "resume_id": 2}
